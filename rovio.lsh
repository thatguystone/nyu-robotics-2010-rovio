(load "threshold.lsh")
(libload "libimage/cca") ;;for connected component analysis

(defclass rovio object
	;properties of the class
	user
	password 
	ip
)

;load our movement commands
(load "rovio.move.lsh")

;when a method has the same name as the class, it's a constructor
(defmethod rovio rovio (user_ password_ ip_ resolution)
	(setq user user_)
	(setq password password_)
	(setq ip ip_)
	(==> this set-resolution resolution)
)

;; mode 0: 176x144
;; mode 1: 320x240 
;; mode 2: 352x288
;; mode 3: 640x480
(defmethod rovio set-resolution (mode)
	(printf "Setting resolution mode %d... " mode)
	(let (
			(r (sys (sprintf "curl -s \"http://%s:%s@%s/ChangeResolution.cgi?ResType=%d\"" user password ip mode)))
			(grabbed (==> this grab))
		)
		
		(printf "Resolution is: %dx%d\n" (idx-dim grabbed 1) (idx-dim grabbed 0))
	)
)

(defmethod rovio getImageDimensions ()
	(let (
			(grabbed (==> this grab))
		)
		
		(printf "Resolution is: %dx%d\n" (idx-dim grabbed 1) (idx-dim grabbed 0))
	)
)

;brightness can be between 1 and 6
(defmethod rovio changeBrightness (brightness)
	(sys (sprintf "curl -s \"http://%s:%s@%s/ChangeBrightness.cgi?Brightness=%d\"" user password ip brightness))
)

(defmethod rovio changeQuality (framerate ratio)
	(sys (sprintf "curl -s \"http://%s:%s@%s/Cmd.cgi?Cmd=ChangeCompressRatio.cgi&Cmd=ChangeFramerate.cgi&Framerate=%d&Ratio=%d\"" user password ip framerate ratio))
)

(defmethod rovio grab ()
	(let (
			(f (popen 
				(sprintf "curl -s http://%s:%s@%s/Jpeg/CamImg%d.jpg | %s -compress lossless -depth 8 - PPM:-"
					user
					password
					ip
					(int (rand 0 1000))
					@@*convert-cmd*
				)
				"r"
			))
		)
		
		(when (not f)
			(error "couldn't open convert pipe file")
		)
		
		(prog1 (pnm-fread-rgb f) (pclose f))
	)
)

(defmethod rovio command (cmd action param1 param2)
	(let (
			(r (sys 
				(sprintf "curl -s \"http://%s:%s@%s/rev.cgi?Cmd=%s&action=%d&drive=%d&speed=%d\" > /dev/null"
					user
					password
					ip
					cmd
					action
					param1
					param2
				)
			))
		)
	)
)

(defmethod rovio showImage (bwImage)
	(rgb-draw-matrix 20 20 bwImage 1 1)
)

(defmethod rovio getDistance (image)
	(let* (
			(cc (new CCAnalyzer image))
			(ret (matrix 4))
			
			;for the ball positions
			(left 0)(right 0)(top 0)(bottom 0)
			
			;;constants (just local values, for now) for calculating the distance to the ball
			(delta (* 4 (/ 3.14 180)))
			(imageMiddle (/ 292 2)) ;;should be: (imageMiddle (/ (idx-dim image 1) 2))
			(focalLength 833)
		)
		
		(if (==> cc run-analysis 125)
			(progn
				(==> cc cc-analysis)
		
				(setq left (:cc:ccdesc 0 (cc-left)))
				(setq right (:cc:ccdesc 0 (cc-right)))
				(setq top (:cc:ccdesc 0 (cc-top)))
				(setq bottom (:cc:ccdesc 0 (cc-bottom)))
				
				(printf "Top: %d - Bottom: %d - Left: %d - Right: %d\n" top bottom left right)
				(printf "Distance: %f\n" (/ 8 (tan (+ delta (atan(/ (- bottom imageMiddle) focalLength))))))
			)
			(print "lost the ball")
		)
	)
)

(de test ()
	(let* (
			(rov (new rovio "admin" "r0b0t0" "129.168.1.13" 0))
			(window (x11-window 0 0 360 280 "Image"))
			
			;for definition later
			(image ())
			(bwImage ())
		)
		
		;(setq image (image-read-rgb "CamImg3934.jpg"))
		(setq image (image-read-rgb "CamImg3332.jpg"))
		(setq bwImage (threshold image [102 112 25] 26)) ;;for the tennis ball
		(==> rov showImage bwImage)
		(==> rov getDistance bwImage)
		(sleep 10) ;;keep the window open
	)
)

(de main (&optional (ip "192.168.1.13") (id "admin") (pw "r0b0t0"))
	(let* (
			(rov (new rovio id pw ip 0))
			(window (x11-window 0 0 360 280 "Image"))
		)
		(==> rov changeBrightness 6) ;;make it so that we can see a bit better
		(==> rov changeQuality 10 3) ;;increase our image quality for a better read
		(==> rov head-down) ;;make sure the head is where it needs to be
		
		(while t
			(setq image (==> rov grab))
			(setq bwImage (threshold image [117 145 43] 26)) ;;for the tennis ball
			(==> rov showImage bwImage)
			(==> rov getDistance bwImage)
			
			;; don't request too many images or it crashes
			(sleep .2)
		)
	)
)
